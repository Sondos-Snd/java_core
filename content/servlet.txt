/* . What is a servlet? */
ava Servlet is server-side technologies to extend the capability of web servers by providing support for dynamic response and data persistence.
 The javax.servlet and javax.servlet.http packages provide interfaces and classes for writing our own servlets.
  All servlets must implement the javax.servlet.Servlet interface, which defines servlet lifecycle methods. When implementing a generic service, 
we can extend the GenericServlet class provided with the Java Servlet API. The HttpServlet class provides methods, such as doGet() and 
doPost(), for handling HTTP-specific services.

 Most of the times, web applications are accessed using HTTP protocol and thats why we mostly extend HttpServlet class. 

 /* hat are the differences between Get and Post methods? */
 get: can be bookmarked. idempotent. less secure.

/*  What is Request Dispatcher? */
RequestDispatcher interface is used to forward the request to another resource that can be HTML, JSP or another servlet in same application.
There are two methods defined in this interface:
1.void forward()
2.void include()

/* What are the differences between forward() method and
sendRedirect() methods? */
endRedirect() method sends new request always because it uses the URL bar of the browser.
sendRedirect() method works at client side. ( forward on server)

/* What is the life-cycle of a servlet? */
1. Servlet is loaded
2. Servlet is instantiated
3. Servlet is initialized
4. Service the request
5. Servlet is destroyed

/* How does cookies work in Servlets? */
 Cookies are text data sent by server to the client and it gets saved at the client local machine.
  Servlet API provides cookies support through javax.servlet.http.Cookie class that implements Serializable and Cloneable interfaces.
  • HttpServletRequest getCookies() method is provided to get the array of Cookies from request, since there is no point of adding Cookie to request,
there are no methods to set or add cookie to request.
• Similarly HttpServletResponse addCookie(Cookie c) method is provided to attach cookie in response header, there are no getter methods for cookie.

/* What are the differences between ServletContext vs
ServletConfig? */
servletconfig: an object represent single servlet.local parameter associated with particular servlet. It’s a name value pair defined inside the servlet
section of web.xml file. getServletConfig() . for example shopping cart of a user is a specific to particular user so here we can use 
servlet config.

servletcontext:  It represent whole web application running on particular JVM and common for all the servlet. global parameter associated with whole 
application. ServletContext has application wide scope so define outside of servlet tag in web.xml file. example: session related info.

/* What are the different methods of session management in
servlets? */
Session is a conversational state between client and server and it can consists of multiple request and response between client and server. Since HTTP and
Web Server both are stateless, the only way to maintain a session is when some unique information about the session (session id) is passed between
server and client in every request and response.

Some of the common ways of session management in servlets are:
1. User Authentication
2. HTML Hidden Field
3. Cookies
4. URL Rewriting
5. Session Management API